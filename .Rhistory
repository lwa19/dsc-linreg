install.packages("devtools")
install.packages("glmnet")
install.packages("ggplot2")
install.packages("cowplot")
library(devtools)
install_github("stephenslab/susieR")
install_github("pcarbo/varbvs",subdir = "varbvs-R")
install_github("stephenslab/dsc",subdir = "dscrutils")
p <- 8
outer(1:p,1:p,"-")
rep(0,8)
1:3 %*% 2:4
rep(0,8)
b     <- rep(0,8)
simulate_predictors_decaying_corr <- function (n, p, s = 0.5) {
S <- s^abs(outer(1:p,1:p,"-"))
return(MASS::mvrnorm(n,rep(0,p),S))
}
simulate_outcomes <- function (X, b, se) {
n <- nrow(X)
return(drop(X %*% b + rnorm(n,sd = se)))
}
se    <- 3
b     <- rep(0,8)
X     <- simulate_predictors_decaying_corr(40,8,0.5)
Xtest <- simulate_predictors_decaying_corr(200,8,0.5)
y     <- simulate_outcomes(X,b,se)
ytest <- simulate_outcomes(Xtest,b,se)
y
X
matrix(0.5,8,8)
S <- s^abs(outer(1:p,1:p,"-"))
s = 0.5
S <- s^abs(outer(1:p,1:p,"-"))
S
n = 20
mvrnorm(n,rep(0,p),S))
mvrnorm(n,rep(0,p),S)
library(MASS)
mvrnorm(n,rep(0,p),S)
mvr_norm_matrix <- mvrnorm(n,rep(0,p),S)
class(mvr_norm_matrix)
dim(mvr_norm_matrix)
array(1:12, dim = c(1,3,1,1,2,1,2))
library(dscrutils)
library(ggplot2)
library(cowplot)
source("/code/plots.R")
source("dsc/code/plots.R")
source("code/plots.R")
methods <- c("ridge","lasso","elastic_net","susie","varbvs","varbvsmix")
dsc <- dscquery("/dsc/linreg",c("fit","mse.err"),"simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err"),"simulate.scenario",
verbose = FALSE)
?dscquery
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario"),"simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err","simulate.scenario"),
verbose = FALSE)
head(dscout)
head(dsc)
dsc <- dscquery("dsc/linreg",c("fit","mse.err") ,"simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario") ,"simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err") ,"simulate.zh",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.zh") ,"simulate.zh",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.zh") ,
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.zh.scenario") ,
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario") ,
verbose = FALSE)
head(dsc)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.zh") ,
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario") ,
verbose = FALSE)
View(dsc)
dsc <- dsc[c("DSC","simulate","simulate.scenario","fit","mse.err")]
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario"), "simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","mse.err", "simulate.scenario"), "simulate",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","simulate","mse.err"), "simulate.scenario"),
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","simulate","mse.err"), "simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","simulate","mse.err", "simulate.scenario"), "simulate.scenario",
verbose = FALSE)
dsc <- dscquery("dsc/linreg",c("fit","simulate","mse.err", "simulate.scenario"),
verbose = FALSE)
View(dsc)
dsc <- dsc[c("DSC","simulate","simulate.scenario","fit","mse.err")]
dsc <- transform(dsc,
simulate = factor(simulate),
fit      = factor(fit,methods))
names(dsc)[1] <- "seed"
nrow(dsc)
rmse <- compute.relative.mse(dsc)
?compute.relative.mse
??copute.relative.mse
??compute.relative.mse
class(rmse)
head(rmse)
dsc  <- cbind(dsc,rmse)
p1 <- rmse.boxplot(subset(dsc,simulate == "null_effects"),"null")
p2 <- rmse.boxplot(subset(dsc,simulate == "one_effect"),"one effect")
p3 <- rmse.boxplot(subset(dsc,simulate.scenario == 1),"scenario 1")
p4 <- rmse.boxplot(subset(dsc,simulate.scenario == 2),"scenario 2")
p5 <- rmse.boxplot(subset(dsc,simulate.scenario == 3),"scenario 3")
p6 <- rmse.boxplot(subset(dsc,simulate.scenario == 4),"scenario 4")
p  <- plot_grid(p1,p2,p3,p4,p5,p6)
print(p)
methods <- c("ridge","lasso","elastic_net","susie","varbvs","varbvsmix")
dsc <- dscquery("dsc/linreg",c("fit","simulate","mse.err", "simulate.scenario"), # CHANGED!
verbose = FALSE)
dim(dsc)
dsc <- dsc[c("DSC","simulate","simulate.scenario","fit","mse.err")]
dsc <- transform(dsc,
simulate = factor(simulate),
fit      = factor(fit,methods))
names(dsc)[1] <- "seed"
nrow(dsc)
# summarize results:
rmse <- compute.relative.mse(dsc)
dsc  <- cbind(dsc,rmse)
p1 <- rmse.boxplot(subset(dsc,simulate == "null_effects"),"null")
p2 <- rmse.boxplot(subset(dsc,simulate == "one_effect"),"one effect")
p3 <- rmse.boxplot(subset(dsc,simulate.scenario == 1),"scenario 1")
p4 <- rmse.boxplot(subset(dsc,simulate.scenario == 2),"scenario 2")
p5 <- rmse.boxplot(subset(dsc,simulate.scenario == 3),"scenario 3")
p6 <- rmse.boxplot(subset(dsc,simulate.scenario == 4),"scenario 4")
p  <- plot_grid(p1,p2,p3,p4,p5,p6)
print(p)
# visualization
p1 <- rmse.boxplot(subset(dsc,simulate == "null_effects"),"null")
p2 <- rmse.boxplot(subset(dsc,simulate == "one_effect"),"one effect")
p3 <- rmse.boxplot(subset(dsc,simulate.scenario == 1),"scenario 1")
p4 <- rmse.boxplot(subset(dsc,simulate.scenario == 2),"scenario 2")
p5 <- rmse.boxplot(subset(dsc,simulate.scenario == 3),"scenario 3")
p6 <- rmse.boxplot(subset(dsc,simulate.scenario == 4),"scenario 4")
p  <- plot_grid(p1,p2,p3,p4,p5,p6)
print(p)
